{"ast":null,"code":"var _jsxFileName = \"/home/administrador/FrontendTest/frontend-test/src/components/Select/index.js\";\nimport { Select as AntSelect } from 'antd';\nimport { Field } from 'formik';\nimport React from 'react';\n\nconst Select = ({\n  name,\n  validate,\n  children,\n  onChange,\n  onBlur,\n  ...restProps\n}) => /*#__PURE__*/React.createElement(Field, {\n  name: name,\n  validate: validate,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}, ({\n  field: {\n    value\n  },\n  form: {\n    setFieldValue,\n    setFieldTouched\n  }\n}) => /*#__PURE__*/React.createElement(AntSelect, Object.assign({\n  onChange: (newValue, option) => {\n    setFieldValue(name, newValue);\n    setTimeout(() => {\n      setFieldTouched(name);\n    }, 300);\n    if (onChange) onChange(newValue, option);\n  },\n  onBlur: newValue => {\n    setFieldTouched(name);\n    if (onBlur) onBlur(newValue);\n  },\n  value: value\n}, restProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }\n}), children));\n\nSelect.renderOptions = options => options.map(({\n  label,\n  ...restProps\n}, index) => /*#__PURE__*/React.createElement(AntSelect.Option, Object.assign({\n  key: `select-option-${index}`\n}, restProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }\n}), label));\n\nSelect.Option = AntSelect.Option;\nSelect.OptGroup = AntSelect.OptGroup;\nexport default Select;","map":{"version":3,"sources":["/home/administrador/FrontendTest/frontend-test/src/components/Select/index.js"],"names":["Select","AntSelect","Field","React","name","validate","children","onChange","onBlur","restProps","field","value","form","setFieldValue","setFieldTouched","newValue","option","setTimeout","renderOptions","options","map","label","index","Option","OptGroup"],"mappings":";AAAA,SAASA,MAAM,IAAIC,SAAnB,QAAoC,MAApC;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMH,MAAM,GAAG,CAAC;AACdI,EAAAA,IADc;AAEdC,EAAAA,QAFc;AAGdC,EAAAA,QAHc;AAIdC,EAAAA,QAJc;AAKdC,EAAAA,MALc;AAMd,KAAGC;AANW,CAAD,kBAQb,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAEL,IAAb;AAAmB,EAAA,QAAQ,EAAEC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC;AAAEK,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF,GAAT;AAAoBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB;AAA1B,CAAD,kBACC,oBAAC,SAAD;AACE,EAAA,QAAQ,EAAE,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAC9BH,IAAAA,aAAa,CAACT,IAAD,EAAOW,QAAP,CAAb;AACAE,IAAAA,UAAU,CAAC,MAAM;AACfH,MAAAA,eAAe,CAACV,IAAD,CAAf;AACD,KAFS,EAEP,GAFO,CAAV;AAGA,QAAIG,QAAJ,EAAcA,QAAQ,CAACQ,QAAD,EAAWC,MAAX,CAAR;AACf,GAPH;AAQE,EAAA,MAAM,EAAED,QAAQ,IAAI;AAClBD,IAAAA,eAAe,CAACV,IAAD,CAAf;AACA,QAAII,MAAJ,EAAYA,MAAM,CAACO,QAAD,CAAN;AACb,GAXH;AAYE,EAAA,KAAK,EAAEJ;AAZT,GAaMF,SAbN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAeGH,QAfH,CAFJ,CARF;;AA+BAN,MAAM,CAACkB,aAAP,GAAuBC,OAAO,IAC5BA,OAAO,CAACC,GAAR,CAAY,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGZ;AAAZ,CAAD,EAA0Ba,KAA1B,kBACV,oBAAC,SAAD,CAAW,MAAX;AAAkB,EAAA,GAAG,EAAG,iBAAgBA,KAAM;AAA9C,GAAqDb,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACGY,KADH,CADF,CADF;;AAOArB,MAAM,CAACuB,MAAP,GAAgBtB,SAAS,CAACsB,MAA1B;AACAvB,MAAM,CAACwB,QAAP,GAAkBvB,SAAS,CAACuB,QAA5B;AAEA,eAAexB,MAAf","sourcesContent":["import { Select as AntSelect } from 'antd';\nimport { Field } from 'formik';\nimport React from 'react';\n\nconst Select = ({\n  name,\n  validate,\n  children,\n  onChange,\n  onBlur,\n  ...restProps\n}) => (\n  <Field name={name} validate={validate}>\n    {({ field: { value }, form: { setFieldValue, setFieldTouched } }) => (\n      <AntSelect\n        onChange={(newValue, option) => {\n          setFieldValue(name, newValue);\n          setTimeout(() => {\n            setFieldTouched(name);\n          }, 300);\n          if (onChange) onChange(newValue, option);\n        }}\n        onBlur={newValue => {\n          setFieldTouched(name);\n          if (onBlur) onBlur(newValue);\n        }}\n        value={value}\n        {...restProps}\n      >\n        {children}\n      </AntSelect>\n    )}\n  </Field>\n);\n\nSelect.renderOptions = options =>\n  options.map(({ label, ...restProps }, index) => (\n    <AntSelect.Option key={`select-option-${index}`} {...restProps}>\n      {label}\n    </AntSelect.Option>\n  ));\n\nSelect.Option = AntSelect.Option;\nSelect.OptGroup = AntSelect.OptGroup;\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}