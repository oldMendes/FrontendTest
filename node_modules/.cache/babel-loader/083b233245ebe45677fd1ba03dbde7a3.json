{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Tcc-puc-minas/frontend/src/views/HealthPlans/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"../../components/Card\";\nimport { Typography } from \"antd\";\nimport axios from \"axios\";\nimport FormGroup from \"../../components/FormGroup\";\nimport SelectMenu from \"../../components/SelectMenu\";\nimport SelectProfessions from '../../components/SelectProfessions';\nimport SelectEntitys from '../../components/SelectEntitys';\nimport HealthPlansTable from './HealthPlansTable';\nimport { STATES } from '../../data/index';\nconst baseApi = \"http://lb-aws-1105894158.sa-east-1.elb.amazonaws.com\";\nconst apiKey = \"api-key=ddd70c32-fc98-4618-b494-a9698f824353\";\nconst apiKeyFindEntity = \"api-key=4b94dba2-5524-4632-939b-92df1c50a645\";\nconst apiKeyFindHealthPlans = \"api-key=261fd4d0-fd9f-468a-afa9-f5a89ed3701c\";\nconst Text = Typography;\n\nconst HealthPlans = () => {\n  const [professionList, setProfessionList] = useState();\n  const [entityList, setEntityList] = useState();\n  const [uf, setUf] = useState([]);\n  const [cidade, setCidade] = useState('');\n  const [profissao, setProfissao] = useState([]);\n  const [datanascimento, setDatanascimento] = useState([]);\n  const [entidade, setEntidade] = useState([]);\n  const [disabledButtton, setDisabledButtton] = useState(true);\n  const [disabledButttonEntity, setDisabledButttonEntity] = useState(true);\n  const [hideButton, setHideButton] = useState(true);\n  const [healthPlansList, setHealthPlansList] = useState();\n\n  const getProfessionalList = () => {\n    axios.get(`${baseApi}/profissao/${uf}/${cidade}?${apiKey}`).then(response => {\n      setProfessionList(response.data);\n      setDisabledButtton(false);\n    }).catch(erro => {\n      console.log(erro.response);\n    });\n  };\n\n  const getEntityList = () => {\n    axios.get(`${baseApi}/entidade/${profissao}/${uf}/${cidade}?${apiKeyFindEntity}`).then(response => {\n      setEntityList(response.data);\n      setDisabledButttonEntity(false);\n    }).catch(erro => {\n      console.log(erro.response);\n    });\n  };\n\n  const fetchHealthPlans = () => {\n    axios.post(`${baseApi}/plano?${apiKeyFindHealthPlans}`, {\n      entidade,\n      uf,\n      cidade,\n      datanascimento: [datanascimento]\n    }).then(response => {\n      var _response$data;\n\n      setHealthPlansList(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.planos);\n    }).catch(erro => {\n      console.log(erro.response);\n    });\n  };\n\n  useEffect(() => {\n    if (uf !== null && cidade !== '') {\n      getProfessionalList();\n    }\n  }, [uf, cidade]);\n  useEffect(() => {\n    if (uf !== null && cidade !== '' && profissao !== null) {\n      getEntityList();\n    }\n  }, [profissao]);\n  useEffect(() => {\n    if (uf !== null && cidade !== '' && profissao !== null, entidade !== [] && datanascimento !== null) {\n      setHideButton(false);\n    }\n  }, [entidade, datanascimento]);\n\n  const fetchDataPlan = () => {\n    if (uf !== null && cidade !== '' && profissao !== null, entidade !== [] && datanascimento !== null) {\n      fetchHealthPlans();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    title: \"Pesquisa por planos dispon\\xEDveis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bs-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    label: \"Estado\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectMenu, {\n    defaultValue: uf,\n    className: \"form-control\",\n    lista: STATES,\n    onChange: e => setUf(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    label: \"Profiss\\xE3o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectProfessions, {\n    defaultValue: profissao,\n    className: \"form-control\",\n    lista: professionList,\n    onChange: e => setProfissao(e.target.value),\n    disabled: disabledButtton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bs-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    htmlFor: \"cidade\",\n    label: \"Cidade*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: cidade,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputNome\",\n    placeholder: \"Digite a cidade\",\n    onBlur: e => setCidade(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    htmlFor: \"datanascimento\",\n    label: \"Data de nascimento*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: datanascimento,\n    type: \"date\",\n    className: \"form-control\",\n    id: \"inputNome\",\n    \"aria-describedby\": \"emailHelp\",\n    placeholder: \"Digite a longitude\",\n    onChange: e => setDatanascimento(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bs-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    label: \"Entidade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectEntitys, {\n    defaultValue: entidade,\n    className: \"form-control\",\n    lista: entityList,\n    onChange: e => setEntidade(e.target.value),\n    disabled: disabledButttonEntity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    onClick: () => fetchDataPlan(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, \"Buscar resultados\"))))), healthPlansList && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '24px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, \" Lista de planos dispon\\xEDveis\")), /*#__PURE__*/React.createElement(HealthPlansTable, {\n    healthPlansList: healthPlansList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default HealthPlans;","map":{"version":3,"sources":["/home/administrador/Tcc-puc-minas/frontend/src/views/HealthPlans/index.js"],"names":["React","useState","useEffect","Card","Typography","axios","FormGroup","SelectMenu","SelectProfessions","SelectEntitys","HealthPlansTable","STATES","baseApi","apiKey","apiKeyFindEntity","apiKeyFindHealthPlans","Text","HealthPlans","professionList","setProfessionList","entityList","setEntityList","uf","setUf","cidade","setCidade","profissao","setProfissao","datanascimento","setDatanascimento","entidade","setEntidade","disabledButtton","setDisabledButtton","disabledButttonEntity","setDisabledButttonEntity","hideButton","setHideButton","healthPlansList","setHealthPlansList","getProfessionalList","get","then","response","data","catch","erro","console","log","getEntityList","fetchHealthPlans","post","planos","fetchDataPlan","e","target","value","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Card from \"../../components/Card\";\nimport { Typography } from \"antd\";\nimport axios from \"axios\";\nimport FormGroup from \"../../components/FormGroup\";\nimport SelectMenu from \"../../components/SelectMenu\";\nimport SelectProfessions from '../../components/SelectProfessions'\nimport SelectEntitys from '../../components/SelectEntitys';\nimport HealthPlansTable from  './HealthPlansTable';\nimport { STATES } from '../../data/index';\n\nconst baseApi = \"http://lb-aws-1105894158.sa-east-1.elb.amazonaws.com\";\nconst apiKey = \"api-key=ddd70c32-fc98-4618-b494-a9698f824353\";\n\nconst apiKeyFindEntity = \"api-key=4b94dba2-5524-4632-939b-92df1c50a645\"\n\nconst apiKeyFindHealthPlans = \"api-key=261fd4d0-fd9f-468a-afa9-f5a89ed3701c\"\n\nconst Text = Typography;\n\nconst HealthPlans = () => {\n  const [professionList, setProfessionList] = useState();\n  const [entityList, setEntityList] = useState();\n  const [uf, setUf] = useState([]);\n  const [cidade, setCidade] = useState('');\n  const [profissao, setProfissao] = useState([]);\n  const [datanascimento, setDatanascimento] = useState([]);\n  const [entidade, setEntidade] = useState([]);\n  const [disabledButtton, setDisabledButtton] = useState(true);\n  const [disabledButttonEntity, setDisabledButttonEntity] = useState(true);\n  const [hideButton, setHideButton] = useState(true);\n  const [healthPlansList, setHealthPlansList] = useState();\n  \n  const getProfessionalList = () => {\n    axios\n      .get(`${baseApi}/profissao/${uf}/${cidade}?${apiKey}`)\n      .then((response) => {\n        setProfessionList(response.data);\n        setDisabledButtton(false)\n      })\n      .catch((erro) => {\n        console.log(erro.response);\n    });\n  }\n\n  const getEntityList = () => {\n    axios\n      .get(`${baseApi}/entidade/${profissao}/${uf}/${cidade}?${apiKeyFindEntity}`)\n      .then((response) => {\n        setEntityList(response.data);\n        setDisabledButttonEntity(false)\n      })\n      .catch((erro) => {\n        console.log(erro.response);\n    });\n  }\n\n\n  const fetchHealthPlans = () => {\n    axios\n      .post(`${baseApi}/plano?${apiKeyFindHealthPlans}`, {\n        entidade,\n        uf,\n        cidade,\n        datanascimento: [datanascimento],\n      })\n      .then((response) => {\n        setHealthPlansList(response?.data?.planos)\n      })\n      .catch((erro) => {\n        console.log(erro.response);\n    });\n  };\n  \n    useEffect(() => {\n      if(uf !== null && cidade !== '') {\n        getProfessionalList();\n      }\n    }, [uf, cidade ]) \n\n    useEffect(() => {\n      if(uf !== null && cidade !== '' && profissao !== null) {\n        getEntityList();\n      }\n    }, [profissao ]) \n\n    useEffect(() => {\n      if(uf !== null && cidade !== '' && profissao !== null, entidade !== [] && datanascimento !== null) {\n        setHideButton(false)\n      }\n    }, [entidade, datanascimento])\n\n    const fetchDataPlan = () => {\n      if(uf !== null && cidade !== '' && profissao !== null, entidade !== [] && datanascimento !== null) {\n      fetchHealthPlans();\n      }\n    }\n  \n    return (\n      <>\n        <Card title=\"Pesquisa por planos disponíveis\">\n          <br />\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"bs-component\">\n                <FormGroup label=\"Estado\">\n                  <SelectMenu\n                    defaultValue={uf}\n                    className=\"form-control\"\n                    lista={STATES}\n                    onChange={(e) =>\n                      setUf(e.target.value)\n                    }\n                  />\n                </FormGroup>\n                <FormGroup label=\"Profissão\">\n                  <SelectProfessions\n                    defaultValue={profissao}\n                    className=\"form-control\"\n                    lista={professionList}\n                    onChange={(e) =>\n                      setProfissao(e.target.value)\n                    }\n                    disabled={disabledButtton}\n                  />\n                </FormGroup>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"bs-component\">\n                <FormGroup htmlFor=\"cidade\" label=\"Cidade*\">\n                  <input\n                    defaultValue={cidade}\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"inputNome\"\n                    placeholder=\"Digite a cidade\"\n                    onBlur={(e) =>\n                      setCidade(e.target.value)\n                    }\n                  ></input>\n                </FormGroup>\n                <FormGroup htmlFor=\"datanascimento\" label=\"Data de nascimento*\">\n                  <input\n                    defaultValue={datanascimento}\n                    type=\"date\"\n                    className=\"form-control\"\n                    id=\"inputNome\"\n                    aria-describedby=\"emailHelp\"\n                    placeholder=\"Digite a longitude\"\n                    onChange={(e) =>\n                      setDatanascimento(e.target.value)\n                    }\n                  ></input>\n                </FormGroup>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"bs-component\">\n                <FormGroup label=\"Entidade\">\n                  <SelectEntitys\n                    defaultValue={entidade}\n                    className=\"form-control\"\n                    lista={entityList}\n                    onChange={(e) =>\n                      setEntidade(e.target.value)\n                    }\n                    disabled={disabledButttonEntity}\n                  />\n                  </FormGroup>\n              </div>\n              <div className=\"col-12\">\n                <button className=\"btn btn-primary\" \n                type=\"submit\" \n                onClick={() => fetchDataPlan()}\n                >Buscar resultados</button>\n              </div>\n            </div>\n          </div>\n        </Card>\n        {healthPlansList && (\n          <>\n            <Card>\n              <Text style={{fontSize: '24px'}}> Lista de planos disponíveis</Text>\n            </Card>\n            <HealthPlansTable healthPlansList={healthPlansList}></HealthPlansTable>\n        </>\n        )}\n      </>\n    ) \n}\n\nexport default HealthPlans;\n"]},"metadata":{},"sourceType":"module"}