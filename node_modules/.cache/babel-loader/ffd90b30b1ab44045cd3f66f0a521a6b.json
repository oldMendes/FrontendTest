{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Tcc-puc-minas/frontend/src/components/SubmitButton/index.js\";\nimport { SaveOutlined } from '@ant-design/icons';\nimport { Button, Popover } from 'antd';\nimport { Field } from 'formik';\nimport { isArray } from 'lodash';\nimport React from 'react';\n\nconst formatErrorsMessage = errors => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, errors && isArray(errors) && errors.map((error, index) => /*#__PURE__*/React.createElement(\"li\", {\n  key: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 38\n  }\n}, error))));\n\nconst SubmitButton = ({\n  children,\n  showValidationErrors,\n  icon = /*#__PURE__*/React.createElement(SaveOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }),\n  disabled,\n  ...restProps\n}) => {\n  const withButton = (isSubmitting, isValid, values) => /*#__PURE__*/React.createElement(Button, Object.assign({\n    loading: isSubmitting,\n    disabled: disabled || !isValid || isSubmitting || Object.values(values).every(v => v === null || v === undefined),\n    type: \"primary\",\n    htmlType: \"submit\",\n    icon: icon\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }), children);\n\n  return /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, ({\n    form: {\n      isSubmitting,\n      values,\n      isValid,\n      errors\n    }\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, showValidationErrors && !isValid ? /*#__PURE__*/React.createElement(Popover, {\n    title: \"Erros de valida\\xE7\\xE3o\",\n    content: formatErrorsMessage(Object.values(errors)),\n    trigger: \"hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, withButton(isSubmitting, isValid, values)) : withButton(isSubmitting, isValid, values)));\n};\n\nSubmitButton.propTypes = {};\nexport default SubmitButton;","map":{"version":3,"sources":["/home/administrador/Tcc-puc-minas/frontend/src/components/SubmitButton/index.js"],"names":["SaveOutlined","Button","Popover","Field","isArray","React","formatErrorsMessage","errors","map","error","index","SubmitButton","children","showValidationErrors","icon","disabled","restProps","withButton","isSubmitting","isValid","values","Object","every","v","undefined","form","propTypes"],"mappings":";AAAA,SAASA,YAAT,QAA6B,mBAA7B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,MAAhC;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,mBAAmB,GAAGC,MAAM,iBAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,MAAM,IACLH,OAAO,CAACG,MAAD,CADR,IAECA,MAAM,CAACC,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBAAkB;AAAI,EAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAiBD,KAAjB,CAA7B,CAHJ,CADF,CADF;;AAUA,MAAME,YAAY,GAAG,CAAC;AACpBC,EAAAA,QADoB;AAEpBC,EAAAA,oBAFoB;AAGpBC,EAAAA,IAAI,gBAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHa;AAIpBC,EAAAA,QAJoB;AAKpB,KAAGC;AALiB,CAAD,KAMf;AACJ,QAAMC,UAAU,GAAG,CAACC,YAAD,EAAeC,OAAf,EAAwBC,MAAxB,kBACjB,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEF,YADX;AAEE,IAAA,QAAQ,EACNH,QAAQ,IACR,CAACI,OADD,IAEAD,YAFA,IAGAG,MAAM,CAACD,MAAP,CAAcA,MAAd,EAAsBE,KAAtB,CAA4BC,CAAC,IAAIA,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKC,SAArD,CANJ;AAQE,IAAA,IAAI,EAAC,SARP;AASE,IAAA,QAAQ,EAAC,QATX;AAUE,IAAA,IAAI,EAAEV;AAVR,KAWME,SAXN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAaGJ,QAbH,CADF;;AAkBA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEa,IAAAA,IAAI,EAAE;AAAEP,MAAAA,YAAF;AAAgBE,MAAAA,MAAhB;AAAwBD,MAAAA,OAAxB;AAAiCZ,MAAAA;AAAjC;AAAR,GAAD,kBACC,0CACGM,oBAAoB,IAAI,CAACM,OAAzB,gBACC,oBAAC,OAAD;AACE,IAAA,KAAK,EAAC,0BADR;AAEE,IAAA,OAAO,EAAEb,mBAAmB,CAACe,MAAM,CAACD,MAAP,CAAcb,MAAd,CAAD,CAF9B;AAGE,IAAA,OAAO,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGU,UAAU,CAACC,YAAD,EAAeC,OAAf,EAAwBC,MAAxB,CALb,CADD,GASCH,UAAU,CAACC,YAAD,EAAeC,OAAf,EAAwBC,MAAxB,CAVd,CAFJ,CADF;AAmBD,CA5CD;;AA8CAT,YAAY,CAACe,SAAb,GAAyB,EAAzB;AAEA,eAAef,YAAf","sourcesContent":["import { SaveOutlined } from '@ant-design/icons';\nimport { Button, Popover } from 'antd';\nimport { Field } from 'formik';\nimport { isArray } from 'lodash';\nimport React from 'react';\n\nconst formatErrorsMessage = errors => (\n  <div>\n    <ul>\n      {errors &&\n        isArray(errors) &&\n        errors.map((error, index) => <li key={index}>{error}</li>)}\n    </ul>\n  </div>\n);\n\nconst SubmitButton = ({\n  children,\n  showValidationErrors,\n  icon = <SaveOutlined />,\n  disabled,\n  ...restProps\n}) => {\n  const withButton = (isSubmitting, isValid, values) => (\n    <Button\n      loading={isSubmitting}\n      disabled={\n        disabled ||\n        !isValid ||\n        isSubmitting ||\n        Object.values(values).every(v => v === null || v === undefined)\n      }\n      type=\"primary\"\n      htmlType=\"submit\"\n      icon={icon}\n      {...restProps}\n    >\n      {children}\n    </Button>\n  );\n\n  return (\n    <Field>\n      {({ form: { isSubmitting, values, isValid, errors } }) => (\n        <>\n          {showValidationErrors && !isValid ? (\n            <Popover\n              title=\"Erros de validação\"\n              content={formatErrorsMessage(Object.values(errors))}\n              trigger=\"hover\"\n            >\n              {withButton(isSubmitting, isValid, values)}\n            </Popover>\n          ) : (\n            withButton(isSubmitting, isValid, values)\n          )}\n        </>\n      )}\n    </Field>\n  );\n};\n\nSubmitButton.propTypes = {};\n\nexport default SubmitButton;\n"]},"metadata":{},"sourceType":"module"}