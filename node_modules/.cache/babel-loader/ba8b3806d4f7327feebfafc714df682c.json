{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Tcc-puc-minas/frontend/src/components/ResetButton/index.js\";\nimport { UndoOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport { Field } from 'formik';\nimport React from 'react'; // import { useDispatch } from 'react-redux';\n// import { resetTextArea } from 'containers/AppLayout/actions';\n// import { clearArray } from 'utils/clearArray';\n\nconst ResetButton = ({\n  children,\n  onClick,\n  customClear,\n  icon = /*#__PURE__*/React.createElement(UndoOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  }),\n  hasImage = false,\n  ...restProps\n}) => {\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, ({\n    form: {\n      resetForm,\n      values\n    }\n  }) => /*#__PURE__*/React.createElement(Button, Object.assign({\n    onClick: event => {\n      /* eslint no-param-reassign: \"error\" */\n      if (hasImage) values.imagesUrl = []; // dispatch(resetTextArea());\n\n      resetForm(); // if (!customClear) clearArray(values);\n\n      if (onClick) onClick(event);\n    },\n    disabled: Object.values(values).every(v => v === null || v === undefined),\n    type: \"dashed\",\n    icon: icon\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), children));\n};\n\nexport default ResetButton;","map":{"version":3,"sources":["/home/administrador/Tcc-puc-minas/frontend/src/components/ResetButton/index.js"],"names":["UndoOutlined","Button","Field","React","ResetButton","children","onClick","customClear","icon","hasImage","restProps","dispatch","useDispatch","form","resetForm","values","event","imagesUrl","Object","every","v","undefined"],"mappings":";AAAA,SAASA,YAAT,QAA6B,mBAA7B;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AAEA;AACA;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,QADmB;AAEnBC,EAAAA,OAFmB;AAGnBC,EAAAA,WAHmB;AAInBC,EAAAA,IAAI,gBAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJY;AAKnBC,EAAAA,QAAQ,GAAG,KALQ;AAMnB,KAAGC;AANgB,CAAD,KAOd;AACJ,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;AACA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb;AAAR,GAAD,kBACC,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEC,KAAK,IAAI;AAChB;AACA,UAAIP,QAAJ,EAAcM,MAAM,CAACE,SAAP,GAAmB,EAAnB,CAFE,CAGhB;;AACAH,MAAAA,SAAS,GAJO,CAKhB;;AACA,UAAIR,OAAJ,EAAaA,OAAO,CAACU,KAAD,CAAP;AACd,KARH;AASE,IAAA,QAAQ,EAAEE,MAAM,CAACH,MAAP,CAAcA,MAAd,EAAsBI,KAAtB,CACRC,CAAC,IAAIA,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKC,SADjB,CATZ;AAYE,IAAA,IAAI,EAAC,QAZP;AAaE,IAAA,IAAI,EAAEb;AAbR,KAcME,SAdN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAgBGL,QAhBH,CAFJ,CADF;AAwBD,CAjCD;;AAmCA,eAAeD,WAAf","sourcesContent":["import { UndoOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport { Field } from 'formik';\nimport React from 'react';\n// import { useDispatch } from 'react-redux';\n\n// import { resetTextArea } from 'containers/AppLayout/actions';\n// import { clearArray } from 'utils/clearArray';\n\nconst ResetButton = ({\n  children,\n  onClick,\n  customClear,\n  icon = <UndoOutlined />,\n  hasImage = false,\n  ...restProps\n}) => {\n  const dispatch = useDispatch();\n  return (\n    <Field>\n      {({ form: { resetForm, values } }) => (\n        <Button\n          onClick={event => {\n            /* eslint no-param-reassign: \"error\" */\n            if (hasImage) values.imagesUrl = [];\n            // dispatch(resetTextArea());\n            resetForm();\n            // if (!customClear) clearArray(values);\n            if (onClick) onClick(event);\n          }}\n          disabled={Object.values(values).every(\n            v => v === null || v === undefined,\n          )}\n          type=\"dashed\"\n          icon={icon}\n          {...restProps}\n        >\n          {children}\n        </Button>\n      )}\n    </Field>\n  );\n};\n\nexport default ResetButton;\n"]},"metadata":{},"sourceType":"module"}