{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Tcc-puc-minas/frontend/src/main/provedorAutenticacao.js\";\nimport React from \"react\";\nimport AuthService from \"../services/authService\";\nexport const AuthContext = React.createContext();\nexport const AuthConsumer = AuthContext.Consumer;\nconst AuthProvider = AuthContext.Provider;\n\nclass ProvedorAutenticao extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      usuarioAutenticado: null,\n      isAutenticado: false\n    };\n\n    this.iniciarSessao = usuario => {\n      // console.log(usuario);\n      AuthService.logar(usuario);\n      this.setState({\n        isAutenticado: true,\n        usuarioAutenticado: usuario\n      }); // console.log(this.state);\n    };\n\n    this.encerrarSessao = () => {\n      AuthService.removerUsuarioLogado();\n      this.setState({\n        isAutenticado: false,\n        usuarioAutenticado: null\n      });\n    };\n  }\n\n  componentDidMount() {\n    let user = localStorage.getItem(\"_usuario_logado\");\n    let usuario = JSON.parse(user);\n    if (usuario !== null) this.iniciarSessao(usuario);\n  }\n\n  render() {\n    const contexto = {\n      usuarioAutenticado: this.state.usuarioAutenticado,\n      isAutenticado: this.state.isAutenticado,\n      iniciarSessao: this.iniciarSessao,\n      encerrarSessao: this.encerrarSessao\n    };\n    return /*#__PURE__*/React.createElement(AuthProvider, {\n      value: contexto,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport default ProvedorAutenticao;","map":{"version":3,"sources":["/home/administrador/Tcc-puc-minas/frontend/src/main/provedorAutenticacao.js"],"names":["React","AuthService","AuthContext","createContext","AuthConsumer","Consumer","AuthProvider","Provider","ProvedorAutenticao","Component","state","usuarioAutenticado","isAutenticado","iniciarSessao","usuario","logar","setState","encerrarSessao","removerUsuarioLogado","componentDidMount","user","localStorage","getItem","JSON","parse","render","contexto","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAO,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,EAApB;AACP,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAACG,QAAjC;AACP,MAAMC,YAAY,GAAGJ,WAAW,CAACK,QAAjC;;AAEA,MAAMC,kBAAN,SAAiCR,KAAK,CAACS,SAAvC,CAAiD;AAAA;AAAA;AAAA,SAC/CC,KAD+C,GACvC;AACNC,MAAAA,kBAAkB,EAAE,IADd;AAENC,MAAAA,aAAa,EAAE;AAFT,KADuC;;AAAA,SAY/CC,aAZ+C,GAY9BC,OAAD,IAAa;AAC3B;AACAb,MAAAA,WAAW,CAACc,KAAZ,CAAkBD,OAAlB;AACA,WAAKE,QAAL,CAAc;AAAEJ,QAAAA,aAAa,EAAE,IAAjB;AAAuBD,QAAAA,kBAAkB,EAAEG;AAA3C,OAAd,EAH2B,CAI3B;AACD,KAjB8C;;AAAA,SAmB/CG,cAnB+C,GAmB9B,MAAM;AACrBhB,MAAAA,WAAW,CAACiB,oBAAZ;AACA,WAAKF,QAAL,CAAc;AAAEJ,QAAAA,aAAa,EAAE,KAAjB;AAAwBD,QAAAA,kBAAkB,EAAE;AAA5C,OAAd;AACD,KAtB8C;AAAA;;AAM/CQ,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX;AACA,QAAIR,OAAO,GAAGS,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAd;AACA,QAAIN,OAAO,KAAK,IAAhB,EAAsB,KAAKD,aAAL,CAAmBC,OAAnB;AACvB;;AAcDW,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG;AACff,MAAAA,kBAAkB,EAAE,KAAKD,KAAL,CAAWC,kBADhB;AAEfC,MAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWE,aAFX;AAGfC,MAAAA,aAAa,EAAE,KAAKA,aAHL;AAIfI,MAAAA,cAAc,EAAE,KAAKA;AAJN,KAAjB;AAMA,wBAAO,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAES,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKC,KAAL,CAAWC,QAA3C,CAAP;AACD;;AAhC8C;;AAmCjD,eAAepB,kBAAf","sourcesContent":["import React from \"react\";\nimport AuthService from \"../services/authService\";\nexport const AuthContext = React.createContext();\nexport const AuthConsumer = AuthContext.Consumer;\nconst AuthProvider = AuthContext.Provider;\n\nclass ProvedorAutenticao extends React.Component {\n  state = {\n    usuarioAutenticado: null,\n    isAutenticado: false,\n  };\n\n  componentDidMount() {\n    let user = localStorage.getItem(\"_usuario_logado\");\n    let usuario = JSON.parse(user);\n    if (usuario !== null) this.iniciarSessao(usuario);\n  }\n\n  iniciarSessao = (usuario) => {\n    // console.log(usuario);\n    AuthService.logar(usuario);\n    this.setState({ isAutenticado: true, usuarioAutenticado: usuario });\n    // console.log(this.state);\n  };\n\n  encerrarSessao = () => {\n    AuthService.removerUsuarioLogado();\n    this.setState({ isAutenticado: false, usuarioAutenticado: null });\n  };\n\n  render() {\n    const contexto = {\n      usuarioAutenticado: this.state.usuarioAutenticado,\n      isAutenticado: this.state.isAutenticado,\n      iniciarSessao: this.iniciarSessao,\n      encerrarSessao: this.encerrarSessao,\n    };\n    return <AuthProvider value={contexto}>{this.props.children}</AuthProvider>;\n  }\n}\n\nexport default ProvedorAutenticao;\n"]},"metadata":{},"sourceType":"module"}