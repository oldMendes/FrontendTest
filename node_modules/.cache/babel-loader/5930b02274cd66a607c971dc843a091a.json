{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Tcc-puc-minas/frontend/src/components/Input/index.js\";\n\n/* eslint-disable no-param-reassign */\nimport { Input as AntInput } from 'antd';\nimport InputMask from 'antd-mask-input';\nimport { Field } from 'formik';\nimport React from 'react'; // import { CustomInputNumber } from 'components/element/InputNumber';\n\nexport const Input = ({\n  name,\n  validate,\n  mask,\n  onChange: $onChange,\n  onBlur: $onBlur,\n  ...restProps\n}) => {\n  const ResolvedInput = mask ? InputMask : AntInput;\n  return /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    validate: validate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, ({\n    field: {\n      value,\n      onChange,\n      onBlur\n    }\n  }) => /*#__PURE__*/React.createElement(ResolvedInput, Object.assign({\n    name: name,\n    value: value,\n    mask: mask,\n    onChange: event => {\n      onChange(event);\n      if ($onChange) $onChange(event);\n    },\n    onBlur: event => {\n      onBlur(event);\n      if ($onBlur) $onBlur(event);\n    }\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })));\n};\n\nInput.Search = ({\n  name,\n  validate,\n  mask,\n  onChange: $onChange,\n  onBlur: $onBlur,\n  ...restProps\n}) => {\n  const ResolvedInput = mask ? InputMask : AntInput;\n  return /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    validate: validate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, ({\n    field: {\n      value,\n      onChange,\n      onBlur\n    }\n  }) => /*#__PURE__*/React.createElement(ResolvedInput.Search, Object.assign({\n    name: name,\n    value: value,\n    mask: mask,\n    onChange: event => {\n      onChange(event);\n      if ($onChange) $onChange(event);\n    },\n    onBlur: event => {\n      onBlur(event);\n      if ($onBlur) $onBlur(event);\n    }\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n};\n\nInput.Password = ({\n  name,\n  validate,\n  mask,\n  onChange: $onChange,\n  onBlur: $onBlur,\n  ...restProps\n}) => {\n  const ResolvedInput = mask ? InputMask : AntInput;\n  return /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    validate: validate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, ({\n    field: {\n      value,\n      onChange,\n      onBlur\n    }\n  }) => /*#__PURE__*/React.createElement(ResolvedInput.Password, Object.assign({\n    name: name,\n    value: value,\n    mask: mask,\n    onChange: event => {\n      onChange(event);\n      if ($onChange) $onChange(event);\n    },\n    onBlur: event => {\n      onBlur(event);\n      if ($onBlur) $onBlur(event);\n    }\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })));\n};\n\nInput.TextArea = ({\n  name,\n  validate,\n  mask,\n  onChange: $onChange,\n  onBlur: $onBlur,\n  ...restProps\n}) => {\n  const ResolvedInput = mask ? InputMask : AntInput;\n  return /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    validate: validate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, ({\n    field: {\n      value,\n      onChange,\n      onBlur\n    }\n  }) => /*#__PURE__*/React.createElement(ResolvedInput.TextArea, Object.assign({\n    name: name,\n    value: value,\n    mask: mask,\n    onChange: event => {\n      onChange(event);\n      if ($onChange) $onChange(event);\n    },\n    onBlur: event => {\n      onBlur(event);\n      if ($onBlur) $onBlur(event);\n    }\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })));\n}; // Input.Number = ({ prefix = '', suffix = '', postfix = '', ...props }) => {\n//   suffix = suffix === '' ? postfix : suffix;\n//   return (\n//     <CustomInputNumber\n//       formatter={value =>\n//         value &&\n//         `${prefix}${value.toString().replace(/[^0-9.,]/gim, '')}${suffix}`\n//       }\n//       parser={value =>\n//         value &&\n//         value\n//           .replace(/[^0-9.,]/gim, '')\n//           .replace(suffix, '')\n//           .replace(prefix, '')\n//       }\n//       {...props}\n//     />\n//   );\n// };\n\n\nexport default Input;","map":{"version":3,"sources":["/home/administrador/Tcc-puc-minas/frontend/src/components/Input/index.js"],"names":["Input","AntInput","InputMask","Field","React","name","validate","mask","onChange","$onChange","onBlur","$onBlur","restProps","ResolvedInput","field","value","event","Search","Password","TextArea"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { Input as AntInput } from 'antd';\nimport InputMask from 'antd-mask-input';\nimport { Field } from 'formik';\nimport React from 'react';\n\n// import { CustomInputNumber } from 'components/element/InputNumber';\n\nexport const Input = ({\n  name,\n  validate,\n  mask,\n  onChange: $onChange,\n  onBlur: $onBlur,\n  ...restProps\n}) => {\n  const ResolvedInput = mask ? InputMask : AntInput;\n  return (\n    <Field name={name} validate={validate}>\n      {({ field: { value, onChange, onBlur } }) => (\n        <ResolvedInput\n          name={name}\n          value={value}\n          mask={mask}\n          onChange={event => {\n            onChange(event);\n            if ($onChange) $onChange(event);\n          }}\n          onBlur={event => {\n            onBlur(event);\n            if ($onBlur) $onBlur(event);\n          }}\n          {...restProps}\n        />\n      )}\n    </Field>\n  );\n};\n\nInput.Search = ({\n  name,\n  validate,\n  mask,\n  onChange: $onChange,\n  onBlur: $onBlur,\n  ...restProps\n}) => {\n  const ResolvedInput = mask ? InputMask : AntInput;\n  return (\n    <Field name={name} validate={validate}>\n      {({ field: { value, onChange, onBlur } }) => (\n        <ResolvedInput.Search\n          name={name}\n          value={value}\n          mask={mask}\n          onChange={event => {\n            onChange(event);\n            if ($onChange) $onChange(event);\n          }}\n          onBlur={event => {\n            onBlur(event);\n            if ($onBlur) $onBlur(event);\n          }}\n          {...restProps}\n        />\n      )}\n    </Field>\n  );\n};\n\nInput.Password = ({\n  name,\n  validate,\n  mask,\n  onChange: $onChange,\n  onBlur: $onBlur,\n  ...restProps\n}) => {\n  const ResolvedInput = mask ? InputMask : AntInput;\n  return (\n    <Field name={name} validate={validate}>\n      {({ field: { value, onChange, onBlur } }) => (\n        <ResolvedInput.Password\n          name={name}\n          value={value}\n          mask={mask}\n          onChange={event => {\n            onChange(event);\n            if ($onChange) $onChange(event);\n          }}\n          onBlur={event => {\n            onBlur(event);\n            if ($onBlur) $onBlur(event);\n          }}\n          {...restProps}\n        />\n      )}\n    </Field>\n  );\n};\n\nInput.TextArea = ({\n  name,\n  validate,\n  mask,\n  onChange: $onChange,\n  onBlur: $onBlur,\n  ...restProps\n}) => {\n  const ResolvedInput = mask ? InputMask : AntInput;\n  return (\n    <Field name={name} validate={validate}>\n      {({ field: { value, onChange, onBlur } }) => (\n        <ResolvedInput.TextArea\n          name={name}\n          value={value}\n          mask={mask}\n          onChange={event => {\n            onChange(event);\n            if ($onChange) $onChange(event);\n          }}\n          onBlur={event => {\n            onBlur(event);\n            if ($onBlur) $onBlur(event);\n          }}\n          {...restProps}\n        />\n      )}\n    </Field>\n  );\n};\n\n// Input.Number = ({ prefix = '', suffix = '', postfix = '', ...props }) => {\n//   suffix = suffix === '' ? postfix : suffix;\n//   return (\n//     <CustomInputNumber\n//       formatter={value =>\n//         value &&\n//         `${prefix}${value.toString().replace(/[^0-9.,]/gim, '')}${suffix}`\n//       }\n//       parser={value =>\n//         value &&\n//         value\n//           .replace(/[^0-9.,]/gim, '')\n//           .replace(suffix, '')\n//           .replace(prefix, '')\n//       }\n//       {...props}\n//     />\n//   );\n// };\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}