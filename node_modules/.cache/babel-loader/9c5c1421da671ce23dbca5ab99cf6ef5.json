{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Tcc-puc-minas/frontend/src/views/HealthPlans/index.js\";\nimport { CloseOutlined } from '@ant-design/icons';\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"../../components/Card\";\nimport { Typography, Button, Col, Row } from \"antd\";\nimport axios from \"axios\";\nimport FormGroup from \"../../components/FormGroup\";\nimport SelectMenu from \"../../components/SelectMenu\";\nimport SelectProfessions from '../../components/SelectProfessions';\nimport SelectEntitys from '../../components/SelectEntitys';\nimport HealthPlansTable from './HealthPlansTable';\nimport { STATES } from '../../data/index';\nimport { Formik } from 'formik';\nimport ResetButton from '../../components/ResetButton';\nimport SubmitButton from '../../components/SubmitButton';\nimport SelectByForm from '../../components/SelectByForm';\nimport Form from '../../components/Form';\nimport Select from '../../components/Select';\nimport Input from '../../components/Input';\nconst baseApi = \"http://lb-aws-1105894158.sa-east-1.elb.amazonaws.com\";\nconst apiKey = \"api-key=ddd70c32-fc98-4618-b494-a9698f824353\";\nconst apiKeyFindEntity = \"api-key=4b94dba2-5524-4632-939b-92df1c50a645\";\nconst apiKeyFindHealthPlans = \"api-key=261fd4d0-fd9f-468a-afa9-f5a89ed3701c\";\nconst Text = Typography;\n\nconst HealthPlans = () => {\n  const [professionList, setProfessionList] = useState();\n  const [entityList, setEntityList] = useState();\n  const [uf, setUf] = useState([]);\n  const [cidade, setCidade] = useState('');\n  const [profissao, setProfissao] = useState([]);\n  const [datanascimento, setDatanascimento] = useState([]);\n  const [entidade, setEntidade] = useState([]);\n  const [disabledButtton, setDisabledButtton] = useState(true);\n  const [disabledButttonEntity, setDisabledButttonEntity] = useState(true);\n  const [healthPlansList, setHealthPlansList] = useState(); // ok\n\n  const getProfessionalList = () => {\n    setTimeout(() => {\n      if (cidade !== undefined || cidade !== null) {\n        axios.get(`${baseApi}/profissao/${uf}/${cidade}?${apiKey}`).then(response => {\n          setProfessionList(response.data);\n          setDisabledButtton(false);\n        }).catch(erro => {\n          console.log(erro.response);\n        });\n      }\n    }, 1000);\n  };\n\n  const getEntityList = () => {\n    // setProfissao(profissao);\n    if (profissao !== undefined) {\n      axios.get(`${baseApi}/entidade/${profissao}/${uf}/${cidade}?${apiKeyFindEntity}`).then(response => {\n        setEntityList(response.data);\n        setDisabledButttonEntity(false);\n      }).catch(erro => {\n        console.log(erro.response);\n      });\n    }\n  };\n\n  const fetchHealthPlans = () => {\n    axios.post(`${baseApi}/plano?${apiKeyFindHealthPlans}`, {\n      entidade,\n      uf,\n      cidade,\n      datanascimento: [datanascimento]\n    }).then(response => {\n      var _response$data;\n\n      setHealthPlansList(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.planos);\n    }).catch(erro => {\n      console.log(erro.response);\n    });\n  };\n\n  useEffect(() => {\n    if (uf !== null && cidade !== '') {\n      getProfessionalList();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [uf, cidade]);\n  useEffect(() => {\n    console.log(cidade);\n\n    if (uf !== null && cidade !== '' && profissao !== null) {\n      getEntityList();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [profissao]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    title: \"Pesquisa por planos dispon\\xEDveis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bs-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    label: \"Estado\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectMenu, {\n    defaultValue: uf,\n    className: \"form-control\",\n    lista: STATES,\n    onChange: e => setUf(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    label: \"Profiss\\xE3o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectProfessions, {\n    defaultValue: profissao,\n    className: \"form-control\",\n    lista: professionList,\n    onChange: e => setProfissao(e.target.value),\n    disabled: disabledButtton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bs-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    htmlFor: \"cidade\",\n    label: \"Cidade*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: cidade,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputNome\",\n    placeholder: \"Digite a cidade\",\n    onBlur: e => setCidade(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    htmlFor: \"datanascimento\",\n    label: \"Data de nascimento*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: datanascimento,\n    type: \"date\",\n    className: \"form-control\",\n    id: \"inputNome\",\n    \"aria-describedby\": \"emailHelp\",\n    placeholder: \"Digite a longitude\",\n    onChange: e => setDatanascimento(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bs-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    label: \"Entidade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectEntitys, {\n    defaultValue: entidade,\n    className: \"form-control\",\n    lista: entityList,\n    onChange: e => setEntidade(e.target.value),\n    disabled: disabledButttonEntity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    onClick: () => fetchHealthPlans(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, \"Buscar resultados\"))))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '24px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, \" Lista de planos dispon\\xEDveis\")), /*#__PURE__*/React.createElement(HealthPlansTable, {\n    healthPlansList: healthPlansList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    gutter: [20, 20],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {} // validationSchema={DELETE_REASON_VALIDATION}\n    ,\n    validateOnMount: true,\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      console.log(values); // if (onSubmit) onSubmit(values, publication._id);\n      // if (onClose) onClose()\n\n      console.log(datanascimento);\n      setSubmitting(false);\n      resetForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [20, 20],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"uf\",\n    label: \"Estado\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"uf\",\n    placeholder: \"Selecione o estado\",\n    style: {\n      width: '100%'\n    },\n    onSelect: value => setUf(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }, STATES.map((state, key) => /*#__PURE__*/React.createElement(Select.Option, {\n    key: key,\n    value: state.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 23\n    }\n  }, state.label))))), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"cidade\",\n    label: \"Cidade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input.Search, {\n    name: \"cidade\",\n    enterButton: true,\n    placeholder: \"Digite o e-mail do patrocinador\",\n    onSearch: value => {\n      getProfessionalList();\n      setCidade(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    gutter: [20, 20],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"profissao\",\n    label: \"Profiss\\xE3o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"profissao\",\n    placeholder: \"Selecione a profiss\\xE3o\",\n    style: {\n      width: '100%'\n    },\n    onSelect: value => setProfissao(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  }, professionList === null || professionList === void 0 ? void 0 : professionList.map((professional, key) => /*#__PURE__*/React.createElement(Select.Option, {\n    key: key,\n    value: professional.profissao,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 23\n    }\n  }, professional.profissao))))), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"entidade\",\n    label: \"Entidade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"entidade\",\n    placeholder: \"Selecione o estado\",\n    style: {\n      width: '100%'\n    },\n    onSelect: value => setEntidade(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, entityList === null || entityList === void 0 ? void 0 : entityList.map((entity, key) => /*#__PURE__*/React.createElement(Select.Option, {\n    key: key,\n    value: entity.NomeFantasia,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 23\n    }\n  }, entity.RazaoSocial)))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    htmlFor: \"datanascimento\",\n    label: \"Data de nascimento*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: datanascimento,\n    type: \"date\",\n    className: \"form-control\",\n    id: \"inputNome\",\n    \"aria-describedby\": \"emailHelp\",\n    placeholder: \"Digite a longitude\",\n    onChange: e => setDatanascimento(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: 24,\n    justify: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SubmitButton, {\n    showValidationErrors: true,\n    icon: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, \"Enviar\"))))));\n};\n\nexport default HealthPlans;","map":{"version":3,"sources":["/home/administrador/Tcc-puc-minas/frontend/src/views/HealthPlans/index.js"],"names":["CloseOutlined","React","useState","useEffect","Card","Typography","Button","Col","Row","axios","FormGroup","SelectMenu","SelectProfessions","SelectEntitys","HealthPlansTable","STATES","Formik","ResetButton","SubmitButton","SelectByForm","Form","Select","Input","baseApi","apiKey","apiKeyFindEntity","apiKeyFindHealthPlans","Text","HealthPlans","professionList","setProfessionList","entityList","setEntityList","uf","setUf","cidade","setCidade","profissao","setProfissao","datanascimento","setDatanascimento","entidade","setEntidade","disabledButtton","setDisabledButtton","disabledButttonEntity","setDisabledButttonEntity","healthPlansList","setHealthPlansList","getProfessionalList","setTimeout","undefined","get","then","response","data","catch","erro","console","log","getEntityList","fetchHealthPlans","post","planos","e","target","value","fontSize","values","setSubmitting","resetForm","width","map","state","key","label","professional","entity","NomeFantasia","RazaoSocial"],"mappings":"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","sourcesContent":["import { CloseOutlined } from '@ant-design/icons';\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"../../components/Card\";\nimport { Typography, Button, Col, Row,  } from \"antd\";\nimport axios from \"axios\";\nimport FormGroup from \"../../components/FormGroup\";\nimport SelectMenu from \"../../components/SelectMenu\";\nimport SelectProfessions from '../../components/SelectProfessions'\nimport SelectEntitys from '../../components/SelectEntitys';\nimport HealthPlansTable from  './HealthPlansTable';\nimport { STATES } from '../../data/index';\nimport { Formik } from 'formik';\nimport ResetButton from '../../components/ResetButton'\nimport SubmitButton from '../../components/SubmitButton'\nimport SelectByForm from '../../components/SelectByForm'\nimport Form from '../../components/Form'\nimport Select from '../../components/Select'\nimport Input from '../../components/Input'\n\nconst baseApi = \"http://lb-aws-1105894158.sa-east-1.elb.amazonaws.com\";\nconst apiKey = \"api-key=ddd70c32-fc98-4618-b494-a9698f824353\";\n\nconst apiKeyFindEntity = \"api-key=4b94dba2-5524-4632-939b-92df1c50a645\"\n\nconst apiKeyFindHealthPlans = \"api-key=261fd4d0-fd9f-468a-afa9-f5a89ed3701c\"\n\nconst Text = Typography;\n\nconst HealthPlans = () => {\n  const [professionList, setProfessionList] = useState();\n  const [entityList, setEntityList] = useState();\n  const [uf, setUf] = useState([]);\n  const [cidade, setCidade] = useState('');\n  const [profissao, setProfissao] = useState([]);\n  const [datanascimento, setDatanascimento] = useState([]);\n  const [entidade, setEntidade] = useState([]);\n  const [disabledButtton, setDisabledButtton] = useState(true);\n  const [disabledButttonEntity, setDisabledButttonEntity] = useState(true);\n  const [healthPlansList, setHealthPlansList] = useState();\n  \n  // ok\n  const getProfessionalList = () => {\n    setTimeout(() => {\n      if(cidade !== undefined || cidade !== null) {\n        axios\n          .get(`${baseApi}/profissao/${uf}/${cidade}?${apiKey}`)\n          .then((response) => {\n            setProfessionList(response.data);\n            setDisabledButtton(false)\n          })\n          .catch((erro) => {\n            console.log(erro.response);\n        });\n      }\n\n    }, 1000) \n  }\n\n  const getEntityList = () => {\n    // setProfissao(profissao);\n    if(profissao !== undefined) {\n\n      axios\n        .get(`${baseApi}/entidade/${profissao}/${uf}/${cidade}?${apiKeyFindEntity}`)\n        .then((response) => {\n          setEntityList(response.data);\n          setDisabledButttonEntity(false)\n        })\n        .catch((erro) => {\n          console.log(erro.response);\n      });\n    }\n  }\n\n\n  const fetchHealthPlans = () => {\n    axios\n      .post(`${baseApi}/plano?${apiKeyFindHealthPlans}`, {\n        entidade,\n        uf,\n        cidade,\n        datanascimento: [datanascimento],\n      })\n      .then((response) => {\n        setHealthPlansList(response?.data?.planos)\n      })\n      .catch((erro) => {\n        console.log(erro.response);\n    });\n  };\n  \n    useEffect(() => {\n      if(uf !== null && cidade !== '') {\n        getProfessionalList();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [uf, cidade ]) \n\n    useEffect(() => {\n      console.log(cidade)\n      if(uf !== null && cidade !== '' && profissao !== null) {\n        getEntityList();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [profissao]) \n  \n    return (\n      <>\n        <Card title=\"Pesquisa por planos disponíveis\">\n          <br />\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"bs-component\">\n                <FormGroup label=\"Estado\">\n                  <SelectMenu\n                    defaultValue={uf}\n                    className=\"form-control\"\n                    lista={STATES}\n                    onChange={(e) =>\n                      setUf(e.target.value)\n                    }\n                  />\n                </FormGroup>\n                <FormGroup label=\"Profissão\">\n                  <SelectProfessions\n                    defaultValue={profissao}\n                    className=\"form-control\"\n                    lista={professionList}\n                    onChange={(e) =>\n                      setProfissao(e.target.value)\n                    }\n                    disabled={disabledButtton}\n                  />\n                </FormGroup>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"bs-component\">\n                <FormGroup htmlFor=\"cidade\" label=\"Cidade*\">\n                  <input\n                    defaultValue={cidade}\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"inputNome\"\n                    placeholder=\"Digite a cidade\"\n                    onBlur={(e) =>\n                      setCidade(e.target.value)\n                    }\n                  ></input>\n                </FormGroup>\n                <FormGroup htmlFor=\"datanascimento\" label=\"Data de nascimento*\">\n                  <input\n                    defaultValue={datanascimento}\n                    type=\"date\"\n                    className=\"form-control\"\n                    id=\"inputNome\"\n                    aria-describedby=\"emailHelp\"\n                    placeholder=\"Digite a longitude\"\n                    onChange={(e) =>\n                      setDatanascimento(e.target.value)\n                    }\n                  ></input>\n                </FormGroup>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"bs-component\">\n                <FormGroup label=\"Entidade\">\n                  <SelectEntitys\n                    defaultValue={entidade}\n                    className=\"form-control\"\n                    lista={entityList}\n                    onChange={(e) =>\n                      setEntidade(e.target.value)\n                    }\n                    disabled={disabledButttonEntity}\n                  />\n                  </FormGroup>\n              </div>\n              <div className=\"col-12\">\n                <button className=\"btn btn-primary\" \n                type=\"submit\" \n                onClick={() => fetchHealthPlans()}\n                >Buscar resultados</button>\n              </div>\n            </div>\n          </div>\n        </Card>\n        <>\n          <Card>\n            <Text style={{fontSize: '24px'}}> Lista de planos disponíveis</Text>\n          </Card>\n          <HealthPlansTable healthPlansList={healthPlansList}></HealthPlansTable>\n        </>\n        <Row gutter={[20, 20]}>\n        <Formik\n          initialValues={{}}\n          // validationSchema={DELETE_REASON_VALIDATION}\n          validateOnMount\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            console.log(values)\n            // if (onSubmit) onSubmit(values, publication._id);\n            // if (onClose) onClose()\n            console.log(datanascimento);\n            setSubmitting(false);\n            resetForm();\n          }}\n        >\n          <Form layout=\"vertical\" style={{ width: '100%' }}>\n            <Row gutter={[20,20]}>\n              <Col md={12}>\n                <Form.Item name=\"uf\" label=\"Estado\">\n                  <Select\n                    name=\"uf\"\n                    placeholder=\"Selecione o estado\"\n                    style={{ width: '100%' }}\n                    onSelect={(value) => setUf(value)}\n                  >\n                    {STATES.map((state, key) => (\n                      <Select.Option key={key} value={state.value}>\n                        {state.label}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col md={12}>\n                <Form.Item name=\"cidade\" label=\"Cidade\">\n                  <Input.Search\n                    name=\"cidade\"\n                    enterButton\n                    placeholder=\"Digite o e-mail do patrocinador\"\n                    onSearch={value => { \n                      getProfessionalList()\n                      setCidade(value)}}\n                  />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={[20,20]}>\n              <Col md={12}>\n                <Form.Item name=\"profissao\" label=\"Profissão\">\n                  <Select\n                    name=\"profissao\"\n                    placeholder=\"Selecione a profissão\"\n                    style={{ width: '100%' }}\n                    onSelect={(value) => setProfissao(value)}\n                  >\n                    {professionList?.map((professional, key) => (\n                      <Select.Option key={key} value={professional.profissao}>\n                        {professional.profissao}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col md={12}>\n                <Form.Item name=\"entidade\" label=\"Entidade\">\n                  <Select\n                    name=\"entidade\"\n                    placeholder=\"Selecione o estado\"\n                    style={{ width: '100%' }}\n                    onSelect={(value) => setEntidade(value)}\n                  >\n                    {entityList?.map((entity, key) => (\n                      <Select.Option key={key} value={entity.NomeFantasia}>\n                        {entity.RazaoSocial}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col md={12}>\n                <FormGroup htmlFor=\"datanascimento\" label=\"Data de nascimento*\">\n                    <input\n                      defaultValue={datanascimento}\n                      type=\"date\"\n                      className=\"form-control\"\n                      id=\"inputNome\"\n                      aria-describedby=\"emailHelp\"\n                      placeholder=\"Digite a longitude\"\n                      onChange={(e) =>\n                        setDatanascimento(e.target.value)\n                      }\n                    ></input>\n                  </FormGroup>\n                </Col>\n            </Row>\n            <Col md={24} justify=\"end\">\n              <SubmitButton showValidationErrors icon={null}>\n                Enviar\n              </SubmitButton>\n             \n            </Col>\n          </Form>\n        </Formik>\n      </Row>\n      </>\n    ) \n}\n\nexport default HealthPlans;\n"]},"metadata":{},"sourceType":"module"}