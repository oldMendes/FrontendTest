{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Tcc-puc-minas/frontend/src/views/HealthPlans/index.js\";\nimport { CloseOutlined } from '@ant-design/icons';\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"../../components/Card\";\nimport { Typography, Button, Col, Row } from \"antd\";\nimport axios from \"axios\";\nimport FormGroup from \"../../components/FormGroup\";\nimport SelectMenu from \"../../components/SelectMenu\";\nimport SelectProfessions from '../../components/SelectProfessions';\nimport SelectEntitys from '../../components/SelectEntitys';\nimport HealthPlansTable from './HealthPlansTable';\nimport { STATES } from '../../data/index';\nimport { Formik } from 'formik';\nimport ResetButton from '../../components/ResetButton';\nimport SubmitButton from '../../components/SubmitButton';\nimport Select from '../../components/Select';\nimport Form from '../../components/Form';\nconst baseApi = \"http://lb-aws-1105894158.sa-east-1.elb.amazonaws.com\";\nconst apiKey = \"api-key=ddd70c32-fc98-4618-b494-a9698f824353\";\nconst apiKeyFindEntity = \"api-key=4b94dba2-5524-4632-939b-92df1c50a645\";\nconst apiKeyFindHealthPlans = \"api-key=261fd4d0-fd9f-468a-afa9-f5a89ed3701c\";\nconst Text = Typography;\n\nconst HealthPlans = () => {\n  const [professionList, setProfessionList] = useState();\n  const [entityList, setEntityList] = useState();\n  const [uf, setUf] = useState([]);\n  const [cidade, setCidade] = useState('');\n  const [profissao, setProfissao] = useState([]);\n  const [datanascimento, setDatanascimento] = useState([]);\n  const [entidade, setEntidade] = useState([]);\n  const [disabledButtton, setDisabledButtton] = useState(true);\n  const [disabledButttonEntity, setDisabledButttonEntity] = useState(true);\n  const [healthPlansList, setHealthPlansList] = useState();\n\n  const getProfessionalList = () => {\n    axios.get(`${baseApi}/profissao/${uf}/${cidade}?${apiKey}`).then(response => {\n      setProfessionList(response.data);\n      setDisabledButtton(false);\n    }).catch(erro => {\n      console.log(erro.response);\n    });\n  };\n\n  const getEntityList = () => {\n    axios.get(`${baseApi}/entidade/${profissao}/${uf}/${cidade}?${apiKeyFindEntity}`).then(response => {\n      setEntityList(response.data);\n      setDisabledButttonEntity(false);\n    }).catch(erro => {\n      console.log(erro.response);\n    });\n  };\n\n  const fetchHealthPlans = () => {\n    axios.post(`${baseApi}/plano?${apiKeyFindHealthPlans}`, {\n      entidade,\n      uf,\n      cidade,\n      datanascimento: [datanascimento]\n    }).then(response => {\n      var _response$data;\n\n      setHealthPlansList(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.planos);\n    }).catch(erro => {\n      console.log(erro.response);\n    });\n  };\n\n  useEffect(() => {\n    if (uf !== null && cidade !== '') {\n      getProfessionalList();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [uf, cidade]);\n  useEffect(() => {\n    if (uf !== null && cidade !== '' && profissao !== null) {\n      getEntityList();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [profissao]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    title: \"Pesquisa por planos dispon\\xEDveis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bs-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    label: \"Estado\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectMenu, {\n    defaultValue: uf,\n    className: \"form-control\",\n    lista: STATES,\n    onChange: e => setUf(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    label: \"Profiss\\xE3o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectProfessions, {\n    defaultValue: profissao,\n    className: \"form-control\",\n    lista: professionList,\n    onChange: e => setProfissao(e.target.value),\n    disabled: disabledButtton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bs-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    htmlFor: \"cidade\",\n    label: \"Cidade*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: cidade,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputNome\",\n    placeholder: \"Digite a cidade\",\n    onBlur: e => setCidade(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    htmlFor: \"datanascimento\",\n    label: \"Data de nascimento*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: datanascimento,\n    type: \"date\",\n    className: \"form-control\",\n    id: \"inputNome\",\n    \"aria-describedby\": \"emailHelp\",\n    placeholder: \"Digite a longitude\",\n    onChange: e => setDatanascimento(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bs-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    label: \"Entidade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectEntitys, {\n    defaultValue: entidade,\n    className: \"form-control\",\n    lista: entityList,\n    onChange: e => setEntidade(e.target.value),\n    disabled: disabledButttonEntity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    onClick: () => fetchHealthPlans(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, \"Buscar resultados\"))))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '24px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \" Lista de planos dispon\\xEDveis\")), /*#__PURE__*/React.createElement(HealthPlansTable, {\n    healthPlansList: healthPlansList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    gutter: [20, 20],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      deleteReason: ''\n    } // validationSchema={DELETE_REASON_VALIDATION}\n    ,\n    validateOnMount: true,\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      console.log(values); // if (onSubmit) onSubmit(values, publication._id);\n      // if (onClose) onClose();\n\n      setSubmitting(false);\n      resetForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"isVerified\",\n    label: \"Verifica\\xE7\\xE3o de perfil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"isVerified\",\n    placeholder: \"Todas as op\\xE7\\xF5es\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, STATES.map((option, key) => /*#__PURE__*/React.createElement(Select.Option, {\n    key: key,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, option.label))))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"uf\",\n    label: \"Estado\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"uf\",\n    placeholder: \"Selecione um estado\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, STATES.map((option, key) => /*#__PURE__*/React.createElement(Select.Option, {\n    key: key,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, option.label))))), /*#__PURE__*/React.createElement(Col, {\n    md: 24,\n    justify: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SubmitButton, {\n    showValidationErrors: true,\n    icon: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, \"Enviar\"))))));\n};\n\nexport default HealthPlans;","map":{"version":3,"sources":["/home/administrador/Tcc-puc-minas/frontend/src/views/HealthPlans/index.js"],"names":["CloseOutlined","React","useState","useEffect","Card","Typography","Button","Col","Row","axios","FormGroup","SelectMenu","SelectProfessions","SelectEntitys","HealthPlansTable","STATES","Formik","ResetButton","SubmitButton","Select","Form","baseApi","apiKey","apiKeyFindEntity","apiKeyFindHealthPlans","Text","HealthPlans","professionList","setProfessionList","entityList","setEntityList","uf","setUf","cidade","setCidade","profissao","setProfissao","datanascimento","setDatanascimento","entidade","setEntidade","disabledButtton","setDisabledButtton","disabledButttonEntity","setDisabledButttonEntity","healthPlansList","setHealthPlansList","getProfessionalList","get","then","response","data","catch","erro","console","log","getEntityList","fetchHealthPlans","post","planos","e","target","value","fontSize","deleteReason","values","setSubmitting","resetForm","width","map","option","key","label"],"mappings":"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","sourcesContent":["import { CloseOutlined } from '@ant-design/icons';\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"../../components/Card\";\nimport { Typography, Button, Col, Row,  } from \"antd\";\nimport axios from \"axios\";\nimport FormGroup from \"../../components/FormGroup\";\nimport SelectMenu from \"../../components/SelectMenu\";\nimport SelectProfessions from '../../components/SelectProfessions'\nimport SelectEntitys from '../../components/SelectEntitys';\nimport HealthPlansTable from  './HealthPlansTable';\nimport { STATES } from '../../data/index';\nimport { Formik } from 'formik';\nimport ResetButton from '../../components/ResetButton'\nimport SubmitButton from '../../components/SubmitButton'\nimport Select from '../../components/Select'\nimport Form from '../../components/Form'\n\nconst baseApi = \"http://lb-aws-1105894158.sa-east-1.elb.amazonaws.com\";\nconst apiKey = \"api-key=ddd70c32-fc98-4618-b494-a9698f824353\";\n\nconst apiKeyFindEntity = \"api-key=4b94dba2-5524-4632-939b-92df1c50a645\"\n\nconst apiKeyFindHealthPlans = \"api-key=261fd4d0-fd9f-468a-afa9-f5a89ed3701c\"\n\nconst Text = Typography;\n\nconst HealthPlans = () => {\n  const [professionList, setProfessionList] = useState();\n  const [entityList, setEntityList] = useState();\n  const [uf, setUf] = useState([]);\n  const [cidade, setCidade] = useState('');\n  const [profissao, setProfissao] = useState([]);\n  const [datanascimento, setDatanascimento] = useState([]);\n  const [entidade, setEntidade] = useState([]);\n  const [disabledButtton, setDisabledButtton] = useState(true);\n  const [disabledButttonEntity, setDisabledButttonEntity] = useState(true);\n  const [healthPlansList, setHealthPlansList] = useState();\n  \n  const getProfessionalList = () => {\n    axios\n      .get(`${baseApi}/profissao/${uf}/${cidade}?${apiKey}`)\n      .then((response) => {\n        setProfessionList(response.data);\n        setDisabledButtton(false)\n      })\n      .catch((erro) => {\n        console.log(erro.response);\n    });\n  }\n\n  const getEntityList = () => {\n    axios\n      .get(`${baseApi}/entidade/${profissao}/${uf}/${cidade}?${apiKeyFindEntity}`)\n      .then((response) => {\n        setEntityList(response.data);\n        setDisabledButttonEntity(false)\n      })\n      .catch((erro) => {\n        console.log(erro.response);\n    });\n  }\n\n\n  const fetchHealthPlans = () => {\n    axios\n      .post(`${baseApi}/plano?${apiKeyFindHealthPlans}`, {\n        entidade,\n        uf,\n        cidade,\n        datanascimento: [datanascimento],\n      })\n      .then((response) => {\n        setHealthPlansList(response?.data?.planos)\n      })\n      .catch((erro) => {\n        console.log(erro.response);\n    });\n  };\n  \n    useEffect(() => {\n      if(uf !== null && cidade !== '') {\n        getProfessionalList();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [uf, cidade ]) \n\n    useEffect(() => {\n      if(uf !== null && cidade !== '' && profissao !== null) {\n        getEntityList();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [profissao ]) \n  \n    return (\n      <>\n        <Card title=\"Pesquisa por planos disponíveis\">\n          <br />\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"bs-component\">\n                <FormGroup label=\"Estado\">\n                  <SelectMenu\n                    defaultValue={uf}\n                    className=\"form-control\"\n                    lista={STATES}\n                    onChange={(e) =>\n                      setUf(e.target.value)\n                    }\n                  />\n                </FormGroup>\n                <FormGroup label=\"Profissão\">\n                  <SelectProfessions\n                    defaultValue={profissao}\n                    className=\"form-control\"\n                    lista={professionList}\n                    onChange={(e) =>\n                      setProfissao(e.target.value)\n                    }\n                    disabled={disabledButtton}\n                  />\n                </FormGroup>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"bs-component\">\n                <FormGroup htmlFor=\"cidade\" label=\"Cidade*\">\n                  <input\n                    defaultValue={cidade}\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"inputNome\"\n                    placeholder=\"Digite a cidade\"\n                    onBlur={(e) =>\n                      setCidade(e.target.value)\n                    }\n                  ></input>\n                </FormGroup>\n                <FormGroup htmlFor=\"datanascimento\" label=\"Data de nascimento*\">\n                  <input\n                    defaultValue={datanascimento}\n                    type=\"date\"\n                    className=\"form-control\"\n                    id=\"inputNome\"\n                    aria-describedby=\"emailHelp\"\n                    placeholder=\"Digite a longitude\"\n                    onChange={(e) =>\n                      setDatanascimento(e.target.value)\n                    }\n                  ></input>\n                </FormGroup>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"bs-component\">\n                <FormGroup label=\"Entidade\">\n                  <SelectEntitys\n                    defaultValue={entidade}\n                    className=\"form-control\"\n                    lista={entityList}\n                    onChange={(e) =>\n                      setEntidade(e.target.value)\n                    }\n                    disabled={disabledButttonEntity}\n                  />\n                  </FormGroup>\n              </div>\n              <div className=\"col-12\">\n                <button className=\"btn btn-primary\" \n                type=\"submit\" \n                onClick={() => fetchHealthPlans()}\n                >Buscar resultados</button>\n              </div>\n            </div>\n          </div>\n        </Card>\n        <>\n          <Card>\n            <Text style={{fontSize: '24px'}}> Lista de planos disponíveis</Text>\n          </Card>\n          <HealthPlansTable healthPlansList={healthPlansList}></HealthPlansTable>\n        </>\n        <Row gutter={[20, 20]}>\n        <Formik\n          initialValues={{ deleteReason: '' }}\n          // validationSchema={DELETE_REASON_VALIDATION}\n          validateOnMount\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            console.log(values)\n            // if (onSubmit) onSubmit(values, publication._id);\n            // if (onClose) onClose();\n            setSubmitting(false);\n            resetForm();\n          }}\n        >\n          <Form layout=\"vertical\" style={{ width: '100%' }}>\n            <Col md={6}>\n              <Form.Item name=\"isVerified\" label=\"Verificação de perfil\">\n                <Select\n                  name=\"isVerified\"\n                  placeholder=\"Todas as opções\"\n                  style={{ width: '100%' }}\n                >\n                  {STATES.map((option, key) => (\n                    <Select.Option key={key} value={option.value}>\n                      {option.label}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col md={6}>\n              <Form.Item name=\"uf\" label=\"Estado\">\n                <Select\n                  name=\"uf\"\n                  placeholder=\"Selecione um estado\"\n                  style={{ width: '100%' }}\n                >\n                  {STATES.map((option, key) => (\n                    <Select.Option key={key} value={option.value}>\n                      {option.label}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col md={24} justify=\"end\">\n              \n                \n                <SubmitButton showValidationErrors icon={null}>\n                  Enviar\n                </SubmitButton>\n             \n            </Col>\n          </Form>\n        </Formik>\n      </Row>\n      </>\n    ) \n}\n\nexport default HealthPlans;\n"]},"metadata":{},"sourceType":"module"}