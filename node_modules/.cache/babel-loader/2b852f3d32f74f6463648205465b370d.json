{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Tcc-puc-minas/frontend/src/views/Barragens/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"../../components/Card\";\nimport { Button } from \"antd\";\nimport axios from \"axios\";\nimport FormGroup from \"../../components/FormGroup\";\nimport SelectMenu from \"../../components/SelectMenu\";\nimport SelectProfessions from '../../components/SelectProfessions';\nimport SelectEntitys from '../../components/SelectEntitys';\nimport { STATES } from '../../data/index';\nconst baseApi = \"http://lb-aws-1105894158.sa-east-1.elb.amazonaws.com\";\nconst apiKey = \"api-key=ddd70c32-fc98-4618-b494-a9698f824353\";\nconst apiKeyFindEntity = \"api-key=4b94dba2-5524-4632-939b-92df1c50a645\";\n\nconst FormHealthPlan = () => {\n  const [professionList, setProfessionList] = useState();\n  const [entityList, setEntityList] = useState();\n  const [uf, setUf] = useState([]);\n  const [cidade, setCidade] = useState('');\n  const [profissao, setProfissao] = useState([]);\n  const [datanascimento, setDatanascimento] = useState([]);\n  const [entidade, setEntidade] = useState([]);\n  const [disabledButtton, setDisabledButtton] = useState(true);\n  const [disabledButttonEntity, setDisabledButttonEntity] = useState(true);\n\n  const getProfessionalList = () => {\n    axios.get(`${baseApi}/profissao/${uf}/${cidade}?${apiKey}`).then(response => {\n      setProfessionList(response.data);\n      setDisabledButtton(false);\n    }).catch(erro => {\n      console.log(erro.response);\n    });\n  };\n\n  const getEntityList = () => {\n    axios.get(`${baseApi}/entidade/${profissao}/${uf}/${cidade}?${apiKeyFindEntity}`).then(response => {\n      setEntityList(response.data);\n      setDisabledButttonEntity(false);\n    }).catch(erro => {\n      console.log(erro.response);\n    });\n  };\n\n  useEffect(() => {\n    if (uf !== null && cidade !== '') {\n      console.log(cidade);\n      console.log(uf);\n      getProfessionalList();\n    }\n  }, [uf, cidade]);\n  useEffect(() => {\n    if (uf !== null && cidade !== '' && profissao !== null) {\n      getEntityList();\n    }\n  }, [profissao]);\n  useEffect(() => {\n    if (uf !== null && cidade !== '' && profissao !== null, entidade !== null && datanascimento !== null) {\n      console.log(datanascimento);\n      console.log(entidade);\n    }\n  }, [entidade, datanascimento]); // handleOk = (_e) => {\n  //   if (this.state.title === \"Cadastrar barragem\") {\n  //     axios\n  //       .post(\"http://localhost:8090/saveDam\", {\n  //         name: this.state.name,\n  //         nomeEmpresa: this.state.nomeEmpresa,\n  //         latitude: this.state.latitude,\n  //         longitude: this.state.longitude,\n  //         damType: this.state.damType,\n  //         // damStatus: this.state.damStatus,\n  //         potentialDamDamage: this.state.potentialDamDamage,\n  //       })\n  //       .then(() => {\n  //         this.listarBarragens();\n  //       })\n  //       .catch((erro) => {\n  //         console.log(erro.response);\n  //       });\n  //   } else {\n  //     axios\n  //       .put(`http://localhost:8090/updateDam/${this.state.damId}`, {\n  //         name: this.state.name,\n  //         nomeEmpresa: this.state.nomeEmpresa,\n  //         latitude: parseInt(this.state.latitude),\n  //         longitude: parseInt(this.state.longitude),\n  //         damType: parseInt(this.state.damType),\n  //         // damStatus: parseInt(this.state.damStatus),\n  //         potentialDamDamage: parseInt(this.state.potentialDamDamage),\n  //       })\n  //       .then(() => {\n  //         this.listarBarragens();\n  //       })\n  //       .catch((erro) => {\n  //         console.log(erro.response);\n  //       });\n  //   }\n  //   this.setState({\n  //     visible: false,\n  //   });\n  // };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    title: \"Pesquisa por planos dispon\\xEDveis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bs-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    label: \"Estado\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectMenu, {\n    defaultValue: uf,\n    className: \"form-control\",\n    lista: STATES,\n    onChange: e => setUf(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    label: \"Profiss\\xE3o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectProfessions, {\n    defaultValue: profissao,\n    className: \"form-control\",\n    lista: professionList,\n    onChange: e => setProfissao(e.target.value),\n    disabled: disabledButtton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bs-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    htmlFor: \"cidade\",\n    label: \"Cidade*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: cidade,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputNome\",\n    placeholder: \"Digite a latitude\",\n    onBlur: e => setCidade(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    htmlFor: \"datanascimento\",\n    label: \"Data de nascimento*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: datanascimento,\n    type: \"date\",\n    className: \"form-control\",\n    id: \"inputNome\",\n    \"aria-describedby\": \"emailHelp\",\n    placeholder: \"Digite a longitude\",\n    onChange: e => setDatanascimento(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bs-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    label: \"Entidade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectEntitys, {\n    defaultValue: entidade,\n    className: \"form-control\",\n    lista: entityList,\n    onChange: e => setEntidade(e.target.value),\n    disabled: disabledButttonEntity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, \"Buscar resultados\"))))));\n}; // Barragens.contextType = AuthContext;\n\n\nexport default FormHealthPlan;","map":{"version":3,"sources":["/home/administrador/Tcc-puc-minas/frontend/src/views/Barragens/index.js"],"names":["React","useState","useEffect","Card","Button","axios","FormGroup","SelectMenu","SelectProfessions","SelectEntitys","STATES","baseApi","apiKey","apiKeyFindEntity","FormHealthPlan","professionList","setProfessionList","entityList","setEntityList","uf","setUf","cidade","setCidade","profissao","setProfissao","datanascimento","setDatanascimento","entidade","setEntidade","disabledButtton","setDisabledButtton","disabledButttonEntity","setDisabledButttonEntity","getProfessionalList","get","then","response","data","catch","erro","console","log","getEntityList","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Card from \"../../components/Card\";\nimport { Button } from \"antd\";\nimport axios from \"axios\";\nimport FormGroup from \"../../components/FormGroup\";\nimport SelectMenu from \"../../components/SelectMenu\";\nimport SelectProfessions from '../../components/SelectProfessions'\nimport SelectEntitys from '../../components/SelectEntitys';\nimport { STATES } from '../../data/index';\n\nconst baseApi = \"http://lb-aws-1105894158.sa-east-1.elb.amazonaws.com\";\nconst apiKey = \"api-key=ddd70c32-fc98-4618-b494-a9698f824353\";\n\nconst apiKeyFindEntity = \"api-key=4b94dba2-5524-4632-939b-92df1c50a645\"\n\nconst FormHealthPlan = () => {\n  const [professionList, setProfessionList] = useState();\n  const [entityList, setEntityList] = useState();\n  const [uf, setUf] = useState([]);\n  const [cidade, setCidade] = useState('');\n  const [profissao, setProfissao] = useState([]);\n  const [datanascimento, setDatanascimento] = useState([]);\n  const [entidade, setEntidade] = useState([]);\n  const [disabledButtton, setDisabledButtton] = useState(true);\n  const [disabledButttonEntity, setDisabledButttonEntity] = useState(true);\n  \n\n  const getProfessionalList = () => {\n    axios\n      .get(`${baseApi}/profissao/${uf}/${cidade}?${apiKey}`)\n      .then((response) => {\n        setProfessionList(response.data);\n        setDisabledButtton(false)\n      })\n      .catch((erro) => {\n        console.log(erro.response);\n    });\n  }\n\n  const getEntityList = () => {\n    axios\n      .get(`${baseApi}/entidade/${profissao}/${uf}/${cidade}?${apiKeyFindEntity}`)\n      .then((response) => {\n        setEntityList(response.data);\n        setDisabledButttonEntity(false)\n      })\n      .catch((erro) => {\n        console.log(erro.response);\n    });\n  }\n  \n\n    useEffect(() => {\n      if(uf !== null && cidade !== '') {\n        console.log(cidade)\n        console.log(uf)\n        getProfessionalList();\n      }\n    }, [uf, cidade ]) \n\n    useEffect(() => {\n      if(uf !== null && cidade !== '' && profissao !== null) {\n        getEntityList();\n      }\n    }, [profissao ]) \n\n    useEffect(() => {\n      if(uf !== null && cidade !== '' && profissao !== null, entidade !== null && datanascimento !== null) {\n       console.log(datanascimento)\n       console.log(entidade)\n      }\n    }, [entidade, datanascimento]) \n\n\n  // handleOk = (_e) => {\n  //   if (this.state.title === \"Cadastrar barragem\") {\n  //     axios\n  //       .post(\"http://localhost:8090/saveDam\", {\n  //         name: this.state.name,\n  //         nomeEmpresa: this.state.nomeEmpresa,\n  //         latitude: this.state.latitude,\n  //         longitude: this.state.longitude,\n  //         damType: this.state.damType,\n  //         // damStatus: this.state.damStatus,\n  //         potentialDamDamage: this.state.potentialDamDamage,\n  //       })\n  //       .then(() => {\n  //         this.listarBarragens();\n  //       })\n  //       .catch((erro) => {\n  //         console.log(erro.response);\n  //       });\n  //   } else {\n  //     axios\n  //       .put(`http://localhost:8090/updateDam/${this.state.damId}`, {\n  //         name: this.state.name,\n  //         nomeEmpresa: this.state.nomeEmpresa,\n  //         latitude: parseInt(this.state.latitude),\n  //         longitude: parseInt(this.state.longitude),\n  //         damType: parseInt(this.state.damType),\n  //         // damStatus: parseInt(this.state.damStatus),\n  //         potentialDamDamage: parseInt(this.state.potentialDamDamage),\n  //       })\n  //       .then(() => {\n  //         this.listarBarragens();\n  //       })\n  //       .catch((erro) => {\n  //         console.log(erro.response);\n  //       });\n  //   }\n\n  //   this.setState({\n  //     visible: false,\n  //   });\n  // };\n\n  \n    return (\n      <>\n        <Card title=\"Pesquisa por planos disponíveis\">\n          <br />\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"bs-component\">\n                <FormGroup label=\"Estado\">\n                  <SelectMenu\n                    defaultValue={uf}\n                    className=\"form-control\"\n                    lista={STATES}\n                    onChange={(e) =>\n                      setUf(e.target.value)\n                    }\n                  />\n                </FormGroup>\n                <FormGroup label=\"Profissão\">\n                  <SelectProfessions\n                    defaultValue={profissao}\n                    className=\"form-control\"\n                    lista={professionList}\n                    onChange={(e) =>\n                      setProfissao(e.target.value)\n                    }\n                    disabled={disabledButtton}\n                  />\n                </FormGroup>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"bs-component\">\n                <FormGroup htmlFor=\"cidade\" label=\"Cidade*\">\n                  <input\n                    defaultValue={cidade}\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"inputNome\"\n                    placeholder=\"Digite a latitude\"\n                    onBlur={(e) =>\n                      setCidade(e.target.value)\n                    }\n                  ></input>\n                </FormGroup>\n                <FormGroup htmlFor=\"datanascimento\" label=\"Data de nascimento*\">\n                  <input\n                    defaultValue={datanascimento}\n                    type=\"date\"\n                    className=\"form-control\"\n                    id=\"inputNome\"\n                    aria-describedby=\"emailHelp\"\n                    placeholder=\"Digite a longitude\"\n                    onChange={(e) =>\n                      setDatanascimento(e.target.value)\n                    }\n                  ></input>\n                </FormGroup>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"bs-component\">\n                <FormGroup label=\"Entidade\">\n                  <SelectEntitys\n                    defaultValue={entidade}\n                    className=\"form-control\"\n                    lista={entityList}\n                    onChange={(e) =>\n                      setEntidade(e.target.value)\n                    }\n                    disabled={disabledButttonEntity}\n                  />\n                  </FormGroup>\n              </div>\n              <div className=\"col-12\">\n                <button className=\"btn btn-primary\" type=\"submit\" disabled>Buscar resultados</button>\n              </div>\n            </div>\n          </div>\n        </Card>\n      </>\n    ) \n}\n// Barragens.contextType = AuthContext;\n\nexport default FormHealthPlan;\n"]},"metadata":{},"sourceType":"module"}